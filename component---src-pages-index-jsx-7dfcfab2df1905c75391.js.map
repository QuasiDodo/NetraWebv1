{"version":3,"file":"component---src-pages-index-jsx-7dfcfab2df1905c75391.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/netra/PlasmicCtaBottom.jsx","webpack://gatsby-starter-default/./src/components/plasmic/netra/PlasmicCtaBottom.module.css","webpack://gatsby-starter-default/./src/components/CtaBottom.jsx","webpack://gatsby-starter-default/./src/components/plasmic/netra/PlasmicTestimonial.jsx","webpack://gatsby-starter-default/./src/components/plasmic/netra/PlasmicTestimonial.module.css","webpack://gatsby-starter-default/./src/components/Testimonial.jsx","webpack://gatsby-starter-default/./src/components/plasmic/netra/icons/PlasmicIcon__Icon8.jsx","webpack://gatsby-starter-default/./src/components/plasmic/netra/PlasmicHomepage.module.css","webpack://gatsby-starter-default/./src/components/plasmic/netra/icons/PlasmicIcon__Icon13.jsx","webpack://gatsby-starter-default/./src/components/plasmic/netra/icons/PlasmicIcon__Icon10.jsx","webpack://gatsby-starter-default/./src/components/plasmic/netra/icons/PlasmicIcon__Icon11.jsx","webpack://gatsby-starter-default/./src/components/plasmic/netra/PlasmicHomepage.jsx","webpack://gatsby-starter-default/./src/pages/index.jsx","webpack://gatsby-starter-default/./src/components/plasmic/netra/images/girls18285391920Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/netra/images/people31046351920Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/netra/images/woman32879561920Jpg.jpeg"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: deKwkoK4pA1w3jYaAefVBE\n// Component: q_9J07FjKI49cH\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport Button from \"../../Button\" // plasmic-import: BzFeYtaDPGuPG/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_netra.module.css\" // plasmic-import: deKwkoK4pA1w3jYaAefVBE/projectcss\nimport * as sty from \"./PlasmicCtaBottom.module.css\" // plasmic-import: q_9J07FjKI49cH/css\n\nexport const PlasmicCtaBottom__VariantProps = new Array()\n\nexport const PlasmicCtaBottom__ArgProps = new Array()\n\nexport const defaultCtaBottom__Args = {}\n\nfunction PlasmicCtaBottom__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const args = Object.assign({}, defaultCtaBottom__Args, props.args)\n  const $props = args\n  const $ctx = ph.useDataEnv?.() || {}\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <p.Stack\n        as={\"div\"}\n        data-plasmic-name={\"container\"}\n        data-plasmic-override={overrides.container}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.container)}\n      >\n        <h2\n          data-plasmic-name={\"h2\"}\n          data-plasmic-override={overrides.h2}\n          className={classNames(\n            projectcss.all,\n            projectcss.h2,\n            projectcss.__wab_text,\n            sty.h2\n          )}\n        >\n          {\"Make a call to action.\"}\n        </h2>\n\n        <Button\n          data-plasmic-name={\"button\"}\n          data-plasmic-override={overrides.button}\n          className={classNames(\"__wab_instance\", sty.button)}\n          color={\"blackCoffee\"}\n        >\n          {\"Get In Touch\"}\n        </Button>\n      </p.Stack>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"container\", \"h2\", \"button\"],\n  container: [\"container\", \"h2\", \"button\"],\n  h2: [\"h2\"],\n  button: [\"button\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicCtaBottom__ArgProps,\n      internalVariantPropNames: PlasmicCtaBottom__VariantProps,\n    })\n\n    return PlasmicCtaBottom__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicCtaBottom\"\n  } else {\n    func.displayName = `PlasmicCtaBottom.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicCtaBottom = Object.assign(\n  // Top-level PlasmicCtaBottom renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    container: makeNodeComponent(\"container\"),\n    h2: makeNodeComponent(\"h2\"),\n    button: makeNodeComponent(\"button\"),\n    // Metadata about props expected for PlasmicCtaBottom\n    internalVariantProps: PlasmicCtaBottom__VariantProps,\n    internalArgProps: PlasmicCtaBottom__ArgProps,\n  }\n)\n\nexport default PlasmicCtaBottom\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button = \"PlasmicCtaBottom-module--button--0t6HJ\";\nexport var container = \"PlasmicCtaBottom-module--container--1Z+nH\";\nexport var h2 = \"PlasmicCtaBottom-module--h2--FPUfk\";\nexport var root = \"PlasmicCtaBottom-module--root--Fr5H1\";\nexport var svg___3Gb9T = \"PlasmicCtaBottom-module--svg___3Gb9T--0ngCg\";\nexport var svg__ntqRg = \"PlasmicCtaBottom-module--svg__ntqRg--TwOmY\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicCtaBottom } from \"./plasmic/netra/PlasmicCtaBottom\"\n\nfunction CtaBottom_(props, ref) {\n  // Use PlasmicCtaBottom to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicCtaBottom are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all CtaBottomProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicCtaBottom root={{ ref }} {...props} />\n}\n\nconst CtaBottom = React.forwardRef(CtaBottom_)\n\nexport default CtaBottom\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: deKwkoK4pA1w3jYaAefVBE\n// Component: Q16YjPEYk5yNyA\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_netra.module.css\" // plasmic-import: deKwkoK4pA1w3jYaAefVBE/projectcss\nimport * as sty from \"./PlasmicTestimonial.module.css\" // plasmic-import: Q16YjPEYk5yNyA/css\n\nexport const PlasmicTestimonial__VariantProps = new Array()\n\nexport const PlasmicTestimonial__ArgProps = new Array(\"children\", \"slot\")\n\nexport const defaultTestimonial__Args = {}\n\nfunction PlasmicTestimonial__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const args = Object.assign({}, defaultTestimonial__Args, props.args)\n  const $props = args\n  const $ctx = ph.useDataEnv?.() || {}\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox___1ZIm)}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\",\n          value: args.children,\n          className: classNames(sty.slotTargetChildren),\n        })}\n      </p.Stack>\n\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox__okEbk)}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents: (\n            <React.Fragment>\n              <p.PlasmicImg\n                alt={\"\"}\n                className={classNames(sty.img__eGyJp)}\n                displayHeight={\"64px\"}\n                displayMaxHeight={\"none\"}\n                displayMaxWidth={\"none\"}\n                displayMinHeight={\"0\"}\n                displayMinWidth={\"0\"}\n                displayWidth={\"64px\"}\n                src={\n                  \"https://www.caa.com/sites/default/files/styles/headshot_500x500/public/speaker-headshots/Morgan_CAAspeakers_Heashot_Web.jpg?itok=WCOhQ1Hj\"\n                }\n              />\n\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__fxTXe)}\n              >\n                <div className={classNames(projectcss.all, sty.freeBox__hR8N9)}>\n                  <h5\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h5,\n                      projectcss.__wab_text,\n                      sty.h5___68Xmz\n                    )}\n                  >\n                    {\"Lorem doi\"}\n                  </h5>\n                </div>\n              </p.Stack>\n            </React.Fragment>\n          ),\n\n          value: args.slot,\n        })}\n      </p.Stack>\n    </p.Stack>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicTestimonial__ArgProps,\n      internalVariantPropNames: PlasmicTestimonial__VariantProps,\n    })\n\n    return PlasmicTestimonial__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicTestimonial\"\n  } else {\n    func.displayName = `PlasmicTestimonial.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicTestimonial = Object.assign(\n  // Top-level PlasmicTestimonial renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicTestimonial\n    internalVariantProps: PlasmicTestimonial__VariantProps,\n    internalArgProps: PlasmicTestimonial__ArgProps,\n  }\n)\n\nexport default PlasmicTestimonial\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var freeBox___1ZIm = \"PlasmicTestimonial-module--freeBox___1ZIm--4-MKL\";\nexport var freeBox__fxTXe = \"PlasmicTestimonial-module--freeBox__fxTXe--XJ7Ja\";\nexport var freeBox__hR8N9 = \"PlasmicTestimonial-module--freeBox__hR8N9--6Wpx5\";\nexport var freeBox__okEbk = \"PlasmicTestimonial-module--freeBox__okEbk--JTCCx\";\nexport var h5___68Xmz = \"PlasmicTestimonial-module--h5___68Xmz--Iz4jJ\";\nexport var img__eGyJp = \"PlasmicTestimonial-module--img__eGyJp--p9lc3\";\nexport var root = \"PlasmicTestimonial-module--root--yOmuv\";\nexport var slotTargetChildren = \"PlasmicTestimonial-module--slotTargetChildren--jzah9\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicTestimonial } from \"./plasmic/netra/PlasmicTestimonial\"\n\nfunction Testimonial_(props, ref) {\n  // Use PlasmicTestimonial to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicTestimonial are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all TestimonialProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicTestimonial root={{ ref }} {...props} />\n}\n\nconst Testimonial = React.forwardRef(Testimonial_)\n\nexport default Testimonial\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon8Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M12.74 5.47c2.36 1.03 3.61 3.56 3.18 5.99A6.002 6.002 0 0118 16v.17a3 3 0 011-.17 3 3 0 013 3 3 3 0 01-3 3H6a4 4 0 01-4-4 4 4 0 014-4h.27C5 12.45 4.6 10.24 5.5 8.26a5.49 5.49 0 017.24-2.79m-.81 1.83c-1.77-.8-3.84.01-4.62 1.77-.46 1.02-.38 2.15.1 3.06A5.988 5.988 0 0112 10c.7 0 1.38.12 2 .34a3.506 3.506 0 00-2.07-3.04m1.62-3.66c-.55-.24-1.1-.41-1.67-.52l2.49-1.3.9 2.89a7.67 7.67 0 00-1.72-1.07m-7.46.8c-.49.35-.92.75-1.29 1.19l.11-2.81 2.96.68c-.62.21-1.22.53-1.78.94M18 9.71c-.09-.59-.22-1.16-.41-1.71l2.38 1.5-2.05 2.23c.11-.65.13-1.33.08-2.02M3.04 11.3c.07.6.2 1.17.39 1.7l-2.37-1.5L3.1 9.28c-.1.65-.13 1.33-.06 2.02M19 18h-3v-2a4 4 0 00-4-4 4 4 0 00-4 4H6a2 2 0 00-2 2 2 2 0 002 2h13a1 1 0 001-1 1 1 0 00-1-1z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon8Icon\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicHomepage-module--__wab_img-spacer--FwQ0O\";\nexport var button___7Box = \"PlasmicHomepage-module--button___7Box--87JDN\";\nexport var button__piWfo = \"PlasmicHomepage-module--button__piWfo--zn-GL\";\nexport var button__sIzMq = \"PlasmicHomepage-module--button__sIzMq--Nqvr6\";\nexport var column___7QGh2 = \"PlasmicHomepage-module--column___7QGh2--8DVD0\";\nexport var column__acIxp = \"PlasmicHomepage-module--column__acIxp--IloBc\";\nexport var column__cygCl = \"PlasmicHomepage-module--column__cygCl---Wbek\";\nexport var column__omoH = \"PlasmicHomepage-module--column__omoH--YQpzI\";\nexport var column__pj8ZF = \"PlasmicHomepage-module--column__pj8ZF--OdHZp\";\nexport var column__qdw6F = \"PlasmicHomepage-module--column__qdw6F--vMmfC\";\nexport var column__tfxDk = \"PlasmicHomepage-module--column__tfxDk--G2fU9\";\nexport var column__uw0Df = \"PlasmicHomepage-module--column__uw0Df--2kXL+\";\nexport var columns__aSdWg = \"PlasmicHomepage-module--columns__aSdWg--SktZK\";\nexport var columns__duHE = \"PlasmicHomepage-module--columns__duHE--S4++s\";\nexport var columns__eNc0M = \"PlasmicHomepage-module--columns__eNc0M--S6xoe\";\nexport var companiesSection = \"PlasmicHomepage-module--companiesSection--bveEi\";\nexport var container2 = \"PlasmicHomepage-module--container2--pUhYt\";\nexport var container7 = \"PlasmicHomepage-module--container7--5uiWV\";\nexport var ctaBottom = \"PlasmicHomepage-module--ctaBottom--heLIA\";\nexport var fig = \"PlasmicHomepage-module--fig--PCfPG\";\nexport var footer = \"PlasmicHomepage-module--footer--LwRlS\";\nexport var freeBox___1Moye = \"PlasmicHomepage-module--freeBox___1Moye--umaMy\";\nexport var freeBox___5Wu5I = \"PlasmicHomepage-module--freeBox___5Wu5I--7JfWa\";\nexport var freeBox___7A2Kg = \"PlasmicHomepage-module--freeBox___7A2Kg--tCONH\";\nexport var freeBox___9RtTl = \"PlasmicHomepage-module--freeBox___9RtTl--wx7pY\";\nexport var freeBox___9Sy1F = \"PlasmicHomepage-module--freeBox___9Sy1F--S0L4T\";\nexport var freeBox__auSh0 = \"PlasmicHomepage-module--freeBox__auSh0--XUGle\";\nexport var freeBox__bjJUn = \"PlasmicHomepage-module--freeBox__bjJUn--FwjXe\";\nexport var freeBox__cPQh = \"PlasmicHomepage-module--freeBox__cPQh--2E0uo\";\nexport var freeBox__cgcJa = \"PlasmicHomepage-module--freeBox__cgcJa--axr5x\";\nexport var freeBox__ez8Vz = \"PlasmicHomepage-module--freeBox__ez8Vz--IqFBF\";\nexport var freeBox__faU5J = \"PlasmicHomepage-module--freeBox__faU5J--HPkvd\";\nexport var freeBox__faVK = \"PlasmicHomepage-module--freeBox__faVK--z7hYq\";\nexport var freeBox__gLzge = \"PlasmicHomepage-module--freeBox__gLzge--j8qAr\";\nexport var freeBox__h0KEm = \"PlasmicHomepage-module--freeBox__h0KEm--g-fZY\";\nexport var freeBox__hprG = \"PlasmicHomepage-module--freeBox__hprG--RR6mp\";\nexport var freeBox__iz74W = \"PlasmicHomepage-module--freeBox__iz74W--sI-x1\";\nexport var freeBox__kb7ZK = \"PlasmicHomepage-module--freeBox__kb7ZK--rgn00\";\nexport var freeBox__klSwe = \"PlasmicHomepage-module--freeBox__klSwe--N1T4C\";\nexport var freeBox__llRuL = \"PlasmicHomepage-module--freeBox__llRuL--uwwM9\";\nexport var freeBox__m2BJr = \"PlasmicHomepage-module--freeBox__m2BJr--Wlr99\";\nexport var freeBox__o7Bgg = \"PlasmicHomepage-module--freeBox__o7Bgg--YESBx\";\nexport var freeBox__oUlQg = \"PlasmicHomepage-module--freeBox__oUlQg--NXHZa\";\nexport var freeBox__qIyRr = \"PlasmicHomepage-module--freeBox__qIyRr--Wfx9r\";\nexport var freeBox__rRnec = \"PlasmicHomepage-module--freeBox__rRnec--0H4fp\";\nexport var freeBox__s7Og3 = \"PlasmicHomepage-module--freeBox__s7Og3--vBQ6u\";\nexport var freeBox__sKvWi = \"PlasmicHomepage-module--freeBox__sKvWi--4LUEM\";\nexport var freeBox__sgP0U = \"PlasmicHomepage-module--freeBox__sgP0U--Otqqg\";\nexport var freeBox__t11Tb = \"PlasmicHomepage-module--freeBox__t11Tb--AGCUD\";\nexport var freeBox__tdx31 = \"PlasmicHomepage-module--freeBox__tdx31--JTjFC\";\nexport var freeBox__trp5T = \"PlasmicHomepage-module--freeBox__trp5T--ukuSN\";\nexport var freeBox__wO2R = \"PlasmicHomepage-module--freeBox__wO2R--Wt7oS\";\nexport var freeBox__z4Tx3 = \"PlasmicHomepage-module--freeBox__z4Tx3--B6W7z\";\nexport var freeBox__zIcSk = \"PlasmicHomepage-module--freeBox__zIcSk--f1Toc\";\nexport var freeBox__zLB = \"PlasmicHomepage-module--freeBox__zLB--1JKaL\";\nexport var h1 = \"PlasmicHomepage-module--h1--B-qQY\";\nexport var h2___6L0Ec = \"PlasmicHomepage-module--h2___6L0Ec--7ekeU\";\nexport var h2__l2Lt4 = \"PlasmicHomepage-module--h2__l2Lt4--9H7qh\";\nexport var h2__rxVfI = \"PlasmicHomepage-module--h2__rxVfI--bvi1A\";\nexport var h2__sOjNu = \"PlasmicHomepage-module--h2__sOjNu--KhxLi\";\nexport var h3__azNKh = \"PlasmicHomepage-module--h3__azNKh--s5wVx\";\nexport var h3__gd3Pk = \"PlasmicHomepage-module--h3__gd3Pk--pCj-8\";\nexport var h3__s4Dt0 = \"PlasmicHomepage-module--h3__s4Dt0--OzUvv\";\nexport var h3__z53Am = \"PlasmicHomepage-module--h3__z53Am--WDAbu\";\nexport var h5__igSa2 = \"PlasmicHomepage-module--h5__igSa2--Y9LuU\";\nexport var h5__v1Brc = \"PlasmicHomepage-module--h5__v1Brc---PXiV\";\nexport var h5__vPwle = \"PlasmicHomepage-module--h5__vPwle--6oS3R\";\nexport var header = \"PlasmicHomepage-module--header--Np8hv\";\nexport var hero = \"PlasmicHomepage-module--hero--2IFqB\";\nexport var img___0GHux = \"PlasmicHomepage-module--img___0GHux---KsA4\";\nexport var img___9D5Uy = \"PlasmicHomepage-module--img___9D5Uy--kEpPh\";\nexport var img__cUt3P = \"PlasmicHomepage-module--img__cUt3P--w1Rad\";\nexport var img__df2Kt = \"PlasmicHomepage-module--img__df2Kt--qLKG4\";\nexport var img__hX501 = \"PlasmicHomepage-module--img__hX501--dsjZd\";\nexport var img__n429 = \"PlasmicHomepage-module--img__n429--Gdg4E\";\nexport var img__psXho = \"PlasmicHomepage-module--img__psXho--EsnmJ\";\nexport var img__qKimC = \"PlasmicHomepage-module--img__qKimC--dTFIF\";\nexport var img__uIW1 = \"PlasmicHomepage-module--img__uIW1--yM3kg\";\nexport var info = \"PlasmicHomepage-module--info--vNRfb\";\nexport var root = \"PlasmicHomepage-module--root--zSinm\";\nexport var row3 = \"PlasmicHomepage-module--row3--+nDVt\";\nexport var section__d7IAh = \"PlasmicHomepage-module--section__d7IAh--iyHsy\";\nexport var section__iJ6T6 = \"PlasmicHomepage-module--section__iJ6T6--7a08u\";\nexport var section__tCz7C = \"PlasmicHomepage-module--section__tCz7C--+o5VO\";\nexport var svg__bLoSq = \"PlasmicHomepage-module--svg__bLoSq--34otj\";\nexport var svg__eg8Rk = \"PlasmicHomepage-module--svg__eg8Rk--8-F6j\";\nexport var svg__gjGnx = \"PlasmicHomepage-module--svg__gjGnx--pkxWV\";\nexport var svg__huZ95 = \"PlasmicHomepage-module--svg__huZ95--XrdpM\";\nexport var svg__jgXDe = \"PlasmicHomepage-module--svg__jgXDe--zTDWg\";\nexport var svg__pEtJm = \"PlasmicHomepage-module--svg__pEtJm--bw23O\";\nexport var svg__qdi9T = \"PlasmicHomepage-module--svg__qdi9T--3Em3g\";\nexport var svg__wgOcy = \"PlasmicHomepage-module--svg__wgOcy--V90-3\";\nexport var svg__y1I8T = \"PlasmicHomepage-module--svg__y1I8T--NIqVU\";\nexport var svg__zim5E = \"PlasmicHomepage-module--svg__zim5E--QAniK\";\nexport var testimonial__csHlu = \"PlasmicHomepage-module--testimonial__csHlu--kaj2X\";\nexport var testimonial__iSvb = \"PlasmicHomepage-module--testimonial__iSvb--Hl1zd\";\nexport var testimonial__k7JXj = \"PlasmicHomepage-module--testimonial__k7JXj--4yqW7\";\nexport var text___54Of = \"PlasmicHomepage-module--text___54Of--rS8hW\";\nexport var text__fYmZo = \"PlasmicHomepage-module--text__fYmZo--+6tqV\";\nexport var text__h15D9 = \"PlasmicHomepage-module--text__h15D9--I4qMN\";\nexport var text__l7Igd = \"PlasmicHomepage-module--text__l7Igd--Yyj3M\";\nexport var text__maNmH = \"PlasmicHomepage-module--text__maNmH--v+dP5\";\nexport var text__u1E = \"PlasmicHomepage-module--text__u1E--x7Xrw\";\nexport var text__w3EBf = \"PlasmicHomepage-module--text__w3EBf--YU3Ky\";\nexport var text__wwxqu = \"PlasmicHomepage-module--text__wwxqu--HYKhJ\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon13Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M21 11c0 5.55-3.84 10.74-9 12-5.16-1.26-9-6.45-9-12V5l9-4 9 4v6m-9 10c3.75-1 7-5.46 7-9.78V6.3l-7-3.12L5 6.3v4.92C5 15.54 8.25 20 12 21m3.05-5l-3.08-1.85L8.9 16l.81-3.5L7 10.16l3.58-.31 1.39-3.3 1.4 3.29 3.58.31-2.72 2.35.82 3.5\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon13Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon10Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M21 6.5c0 1.93-1.57 3.5-3.5 3.5S14 8.43 14 6.5 15.57 3 17.5 3 21 4.57 21 6.5M11.5 22c1.11 0 2-.89 2-2h-4a2 2 0 002 2M18 12h-.5c-.5 0-1-.08-1.5-.21V17H7v-6.5C7 8 9 6 11.5 6c.18 0 .35.03.5.05.1-.99.45-1.91 1-2.68C12.92 2.6 12.28 2 11.5 2c-.83 0-1.5.67-1.5 1.5v.68c-2.87.68-5 3.25-5 6.32V16l-2 2v1h17v-1l-2-2v-4z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon10Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon11Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M15 4a8 8 0 018 8 8 8 0 01-8 8 8 8 0 01-8-8 8 8 0 018-8m0 2a6 6 0 00-6 6 6 6 0 006 6 6 6 0 006-6 6 6 0 00-6-6m-1 2h1.5v3.78l2.33 2.33-1.06 1.06L14 12.4V8M2 18a1 1 0 01-1-1 1 1 0 011-1h3.83c.31.71.71 1.38 1.17 2H2m1-5a1 1 0 01-1-1 1 1 0 011-1h2.05L5 12l.05 1H3m1-5a1 1 0 01-1-1 1 1 0 011-1h3c-.46.62-.86 1.29-1.17 2H4z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon11Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: deKwkoK4pA1w3jYaAefVBE\n// Component: S3xOQUULWLqz-\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: IZ7cmxqWjCYvg/component\nimport Button from \"../../Button\" // plasmic-import: BzFeYtaDPGuPG/component\nimport Testimonial from \"../../Testimonial\" // plasmic-import: Q16YjPEYk5yNyA/component\nimport CtaBottom from \"../../CtaBottom\" // plasmic-import: q_9J07FjKI49cH/component\nimport Footer from \"../../Footer\" // plasmic-import: rUgGjC8cM1U1l/component\nimport { useScreenVariants as useScreenVariantsrjDmXlLiWnTyry } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: rjDmXLLiWNTyry/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_netra.module.css\" // plasmic-import: deKwkoK4pA1w3jYaAefVBE/projectcss\nimport * as sty from \"./PlasmicHomepage.module.css\" // plasmic-import: S3xOQUULWLqz-/css\nimport Icon8Icon from \"./icons/PlasmicIcon__Icon8\" // plasmic-import: IgQlLs2PQZivgr/icon\nimport Icon13Icon from \"./icons/PlasmicIcon__Icon13\" // plasmic-import: Y-9MHhtdATSnQF/icon\nimport Icon10Icon from \"./icons/PlasmicIcon__Icon10\" // plasmic-import: c1GADTv9fhR8S5/icon\nimport Icon11Icon from \"./icons/PlasmicIcon__Icon11\" // plasmic-import: Ug2RGu2eumircN/icon\nimport girls18285391920JpgE8O7G209USxCex from \"./images/girls18285391920Jpg.jpeg\" // plasmic-import: E8O7G209USxCex/picture\nimport people31046351920JpgG7RneH3MEsqQti from \"./images/people31046351920Jpg.jpeg\" // plasmic-import: g7rneH3MEsqQTI/picture\nimport woman32879561920JpgJEAqYrGa2AoOSb from \"./images/woman32879561920Jpg.jpeg\" // plasmic-import: jEAqYRGa2aoOSb/picture\n\nexport const PlasmicHomepage__VariantProps = new Array()\n\nexport const PlasmicHomepage__ArgProps = new Array()\n\nexport const defaultHomepage__Args = {}\n\nfunction PlasmicHomepage__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const args = Object.assign({}, defaultHomepage__Args, props.args)\n  const $props = args\n  const $ctx = ph.useDataEnv?.() || {}\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantsrjDmXlLiWnTyry(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            sty.root\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <div\n            data-plasmic-name={\"hero\"}\n            data-plasmic-override={overrides.hero}\n            className={classNames(projectcss.all, sty.hero)}\n          >\n            <div\n              data-plasmic-name={\"container7\"}\n              data-plasmic-override={overrides.container7}\n              className={classNames(projectcss.all, sty.container7)}\n            >\n              <div\n                data-plasmic-name={\"row3\"}\n                data-plasmic-override={overrides.row3}\n                className={classNames(projectcss.all, sty.row3)}\n              >\n                <div\n                  data-plasmic-name={\"info\"}\n                  data-plasmic-override={overrides.info}\n                  className={classNames(projectcss.all, sty.info)}\n                >\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__faVK)}\n                  >\n                    <h1\n                      data-plasmic-name={\"h1\"}\n                      data-plasmic-override={overrides.h1}\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h1,\n                        projectcss.__wab_text,\n                        sty.h1\n                      )}\n                    >\n                      {\"Choose us for marketing photography\"}\n                    </h1>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__maNmH\n                      )}\n                    >\n                      {\n                        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n                      }\n                    </div>\n\n                    <Button\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.button__piWfo\n                      )}\n                      color={\"blackCoffee\"}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__fYmZo\n                        )}\n                      >\n                        {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                          ? \"Get In touch\"\n                          : \"Get In touch\"}\n                      </div>\n                    </Button>\n                  </p.Stack>\n                </div>\n\n                <div\n                  data-plasmic-name={\"fig\"}\n                  data-plasmic-override={overrides.fig}\n                  className={classNames(projectcss.all, sty.fig)}\n                />\n              </div>\n            </div>\n          </div>\n\n          <section className={classNames(projectcss.all, sty.section__d7IAh)}>\n            <div className={classNames(projectcss.all, sty.freeBox__s7Og3)}>\n              <div className={classNames(projectcss.all, sty.freeBox___1Moye)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__llRuL)}\n                  >\n                    <h2\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h2,\n                        projectcss.__wab_text,\n                        sty.h2__rxVfI\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                        ? \"Why Choose Us\"\n                        : \"Why choose us\"}\n                    </h2>\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.columns__duHE)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__qdw6F\n                        )}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox__klSwe\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__h0KEm\n                            )}\n                          >\n                            <Icon8Icon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__gjGnx\n                              )}\n                              role={\"img\"}\n                            />\n                          </div>\n\n                          <p.Stack\n                            as={\"div\"}\n                            hasGap={true}\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__wO2R\n                            )}\n                          >\n                            <h3\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h3,\n                                projectcss.__wab_text,\n                                sty.h3__s4Dt0\n                              )}\n                            >\n                              {\"Welcoming  trusted\"}\n                            </h3>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text__or3MV\n                              )}\n                            >\n                              {\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor .\"\n                              }\n                            </div>\n                          </p.Stack>\n                        </p.Stack>\n                      </div>\n\n                      <div\n                        className={classNames(projectcss.all, sty.column__omoH)}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox___9Sy1F\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__bjJUn\n                            )}\n                          >\n                            <Icon13Icon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__pEtJm\n                              )}\n                              role={\"img\"}\n                            />\n                          </div>\n\n                          <p.Stack\n                            as={\"div\"}\n                            hasGap={true}\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__m2BJr\n                            )}\n                          >\n                            <h3\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h3,\n                                projectcss.__wab_text,\n                                sty.h3__azNKh\n                              )}\n                            >\n                              {\"Tested and secure\"}\n                            </h3>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text__tWeM1\n                              )}\n                            >\n                              {\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor .\"\n                              }\n                            </div>\n                          </p.Stack>\n                        </p.Stack>\n                      </div>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__uw0Df\n                        )}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox__qIyRr\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__zLB\n                            )}\n                          >\n                            <Icon10Icon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__wgOcy\n                              )}\n                              role={\"img\"}\n                            />\n                          </div>\n\n                          <p.Stack\n                            as={\"div\"}\n                            hasGap={true}\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__ez8Vz\n                            )}\n                          >\n                            <h3\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h3,\n                                projectcss.__wab_text,\n                                sty.h3__gd3Pk\n                              )}\n                            >\n                              {\"Mindful notifications\"}\n                            </h3>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text__uBy19\n                              )}\n                            >\n                              {\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor .\"\n                              }\n                            </div>\n                          </p.Stack>\n                        </p.Stack>\n                      </div>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__cygCl\n                        )}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox__hprG\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__faU5J\n                            )}\n                          >\n                            <Icon11Icon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__qdi9T\n                              )}\n                              role={\"img\"}\n                            />\n                          </div>\n\n                          <p.Stack\n                            as={\"div\"}\n                            hasGap={true}\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox___5Wu5I\n                            )}\n                          >\n                            <h3\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h3,\n                                projectcss.__wab_text,\n                                sty.h3__z53Am\n                              )}\n                            >\n                              {\"Real-time results\"}\n                            </h3>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text__okJcC\n                              )}\n                            >\n                              {\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor .\"\n                              }\n                            </div>\n                          </p.Stack>\n                        </p.Stack>\n                      </div>\n                    </p.Stack>\n                  </p.Stack>\n                ) : null}\n              </div>\n            </div>\n          </section>\n\n          <section className={classNames(projectcss.all, sty.section__tCz7C)}>\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.columns__aSdWg)}\n            >\n              <div className={classNames(projectcss.all, sty.column__tfxDk)}>\n                <p.PlasmicImg\n                  alt={\"\"}\n                  className={classNames(sty.img__df2Kt)}\n                  displayHeight={\"100%\"}\n                  displayMaxHeight={\"none\"}\n                  displayMaxWidth={\"100%\"}\n                  displayMinHeight={\"0\"}\n                  displayMinWidth={\"0\"}\n                  displayWidth={\"100%\"}\n                  loading={\"lazy\"}\n                  src={{\n                    src: girls18285391920JpgE8O7G209USxCex,\n                    fullWidth: 1920,\n                    fullHeight: 1280,\n                    aspectRatio: undefined,\n                  }}\n                />\n              </div>\n\n              <div className={classNames(projectcss.all, sty.column__acIxp)}>\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__tdx31)}\n                >\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__l2Lt4\n                    )}\n                  >\n                    {\"The standard used since\"}\n                  </h2>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text___54Of\n                    )}\n                  >\n                    {\n                      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\"\n                    }\n                  </div>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__w3EBf\n                    )}\n                  >\n                    {\n                      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\"\n                    }\n                  </div>\n\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button__sIzMq)}\n                    color={\"blackCoffee\"}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__wwxqu\n                      )}\n                    >\n                      {\"About Us\"}\n                    </div>\n                  </Button>\n                </p.Stack>\n              </div>\n            </p.Stack>\n\n            <div className={classNames(projectcss.all, sty.freeBox__t11Tb)}>\n              <div className={classNames(projectcss.all, sty.freeBox__cPQh)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__o7Bgg)}\n                  />\n                ) : null}\n              </div>\n            </div>\n          </section>\n\n          <section className={classNames(projectcss.all, sty.section__iJ6T6)}>\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.columns__eNc0M)}\n            >\n              <div className={classNames(projectcss.all, sty.column___7QGh2)}>\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__zIcSk)}\n                >\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__sOjNu\n                    )}\n                  >\n                    {\"The standard used since\"}\n                  </h2>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__l7Igd\n                    )}\n                  >\n                    {\n                      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\"\n                    }\n                  </div>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__u1E\n                    )}\n                  >\n                    {\n                      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\"\n                    }\n                  </div>\n\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button___7Box)}\n                    color={\"blackCoffee\"}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__h15D9\n                      )}\n                    >\n                      {\"Contact Us\"}\n                    </div>\n                  </Button>\n                </p.Stack>\n              </div>\n\n              <div className={classNames(projectcss.all, sty.column__pj8ZF)}>\n                <p.PlasmicImg\n                  alt={\"\"}\n                  className={classNames(sty.img__hX501)}\n                  displayHeight={\n                    hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                      ? \"100%\"\n                      : \"100%\"\n                  }\n                  displayMaxHeight={\"none\"}\n                  displayMaxWidth={\"100%\"}\n                  displayMinHeight={\"0\"}\n                  displayMinWidth={\"0\"}\n                  displayWidth={\"100%\"}\n                  loading={\"lazy\"}\n                  src={{\n                    src: people31046351920JpgG7RneH3MEsqQti,\n                    fullWidth: 1920,\n                    fullHeight: 1281,\n                    aspectRatio: undefined,\n                  }}\n                />\n              </div>\n            </p.Stack>\n\n            <div className={classNames(projectcss.all, sty.freeBox__rRnec)}>\n              <div className={classNames(projectcss.all, sty.freeBox__trp5T)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__cgcJa)}\n                  />\n                ) : null}\n              </div>\n            </div>\n          </section>\n\n          <div className={classNames(projectcss.all, sty.freeBox__sKvWi)}>\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox___9RtTl)}\n            >\n              <Testimonial\n                className={classNames(\"__wab_instance\", sty.testimonial__iSvb)}\n                slot={\n                  <React.Fragment>\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__uIW1)}\n                      displayHeight={\"64px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"none\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"64px\"}\n                      src={{\n                        src: woman32879561920JpgJEAqYrGa2AoOSb,\n                        fullWidth: 1920,\n                        fullHeight: 1280,\n                        aspectRatio: undefined,\n                      }}\n                    />\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(\n                        projectcss.all,\n                        sty.freeBox___7A2Kg\n                      )}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__oUlQg\n                        )}\n                      >\n                        <h5\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h5,\n                            projectcss.__wab_text,\n                            sty.h5__v1Brc\n                          )}\n                        >\n                          {\"Lorem doi\"}\n                        </h5>\n                      </div>\n                    </p.Stack>\n                  </React.Fragment>\n                }\n              />\n\n              <Testimonial\n                className={classNames(\"__wab_instance\", sty.testimonial__k7JXj)}\n                slot={\n                  <React.Fragment>\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__psXho)}\n                      displayHeight={\"64px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"none\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"64px\"}\n                      src={{\n                        src: people31046351920JpgG7RneH3MEsqQti,\n                        fullWidth: 1920,\n                        fullHeight: 1281,\n                        aspectRatio: undefined,\n                      }}\n                    />\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__sgP0U)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__gLzge\n                        )}\n                      >\n                        <h5\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h5,\n                            projectcss.__wab_text,\n                            sty.h5__igSa2\n                          )}\n                        >\n                          {\"Lorem doi\"}\n                        </h5>\n                      </div>\n                    </p.Stack>\n                  </React.Fragment>\n                }\n              />\n\n              <Testimonial\n                className={classNames(\"__wab_instance\", sty.testimonial__csHlu)}\n                slot={\n                  <React.Fragment>\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__cUt3P)}\n                      displayHeight={\"64px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"none\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"64px\"}\n                      src={{\n                        src: girls18285391920JpgE8O7G209USxCex,\n                        fullWidth: 1920,\n                        fullHeight: 1280,\n                        aspectRatio: undefined,\n                      }}\n                    />\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__z4Tx3)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__iz74W\n                        )}\n                      >\n                        <h5\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h5,\n                            projectcss.__wab_text,\n                            sty.h5__vPwle\n                          )}\n                        >\n                          {\"Lorem doi\"}\n                        </h5>\n                      </div>\n                    </p.Stack>\n                  </React.Fragment>\n                }\n              />\n            </p.Stack>\n          </div>\n\n          <div\n            data-plasmic-name={\"companiesSection\"}\n            data-plasmic-override={overrides.companiesSection}\n            className={classNames(projectcss.all, sty.companiesSection)}\n          >\n            <p.Stack\n              as={\"div\"}\n              data-plasmic-name={\"container2\"}\n              data-plasmic-override={overrides.container2}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.container2)}\n            >\n              <h2\n                className={classNames(\n                  projectcss.all,\n                  projectcss.h2,\n                  projectcss.__wab_text,\n                  sty.h2___6L0Ec\n                )}\n              >\n                {\"We work with local businesses\"}\n              </h2>\n\n              <div className={classNames(projectcss.all, sty.freeBox__kb7ZK)}>\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__auSh0)}\n                >\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img___0GHux)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-strapi.svg\"\n                    }\n                  />\n\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__n429)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-segment.svg\"\n                    }\n                  />\n\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img___9D5Uy)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-xstate.svg\"\n                    }\n                  />\n\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__qKimC)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-mapbox.svg\"\n                    }\n                  />\n                </p.Stack>\n              </div>\n            </p.Stack>\n          </div>\n\n          <CtaBottom\n            data-plasmic-name={\"ctaBottom\"}\n            data-plasmic-override={overrides.ctaBottom}\n            className={classNames(\"__wab_instance\", sty.ctaBottom)}\n          />\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header\",\n    \"hero\",\n    \"container7\",\n    \"row3\",\n    \"info\",\n    \"h1\",\n    \"fig\",\n    \"companiesSection\",\n    \"container2\",\n    \"ctaBottom\",\n    \"footer\",\n  ],\n\n  header: [\"header\"],\n  hero: [\"hero\", \"container7\", \"row3\", \"info\", \"h1\", \"fig\"],\n  container7: [\"container7\", \"row3\", \"info\", \"h1\", \"fig\"],\n  row3: [\"row3\", \"info\", \"h1\", \"fig\"],\n  info: [\"info\", \"h1\"],\n  h1: [\"h1\"],\n  fig: [\"fig\"],\n  companiesSection: [\"companiesSection\", \"container2\"],\n  container2: [\"container2\"],\n  ctaBottom: [\"ctaBottom\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHomepage__ArgProps,\n      internalVariantPropNames: PlasmicHomepage__VariantProps,\n    })\n\n    return PlasmicHomepage__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHomepage\"\n  } else {\n    func.displayName = `PlasmicHomepage.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHomepage = Object.assign(\n  // Top-level PlasmicHomepage renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    hero: makeNodeComponent(\"hero\"),\n    container7: makeNodeComponent(\"container7\"),\n    row3: makeNodeComponent(\"row3\"),\n    info: makeNodeComponent(\"info\"),\n    h1: makeNodeComponent(\"h1\"),\n    fig: makeNodeComponent(\"fig\"),\n    companiesSection: makeNodeComponent(\"companiesSection\"),\n    container2: makeNodeComponent(\"container2\"),\n    ctaBottom: makeNodeComponent(\"ctaBottom\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicHomepage\n    internalVariantProps: PlasmicHomepage__VariantProps,\n    internalArgProps: PlasmicHomepage__ArgProps,\n  }\n)\n\nexport default PlasmicHomepage\n/* prettier-ignore-end */\n","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHomepage } from \"../components/plasmic/netra/PlasmicHomepage\"\n\nfunction Homepage() {\n  // Use PlasmicHomepage to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHomepage are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicHomepage is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicHomepage />\n}\n\nexport default Homepage\n","export default __webpack_public_path__ + \"static/girls18285391920Jpg-46247f7d132b73dfc4373dcfb5d16c2c.jpeg\";","export default __webpack_public_path__ + \"static/people31046351920Jpg-9db8f294a2c5d17288b9ca222fe70c56.jpeg\";","export default __webpack_public_path__ + \"static/woman32879561920Jpg-ab5a3507ce1cef34da786540e5ebb2bc.jpeg\";"],"names":["PlasmicCtaBottom__VariantProps","Array","PlasmicCtaBottom__ArgProps","defaultCtaBottom__Args","PlasmicDescendants","root","container","h2","button","makeNodeComponent","nodeName","func","props","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","Object","assign","args","ph","className","classNames","projectcss","as","hasGap","Button","color","PlasmicCtaBottom__RenderFunc","displayName","PlasmicCtaBottom","internalVariantProps","internalArgProps","CtaBottom_","ref","React","PlasmicTestimonial__VariantProps","PlasmicTestimonial__ArgProps","defaultTestimonial__Args","PlasmicTestimonial","p","defaultContents","value","children","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","src","slot","PlasmicTestimonial__RenderFunc","Testimonial_","style","title","restProps","xmlns","viewBox","height","width","fill","d","button___7Box","button__piWfo","button__sIzMq","column___7QGh2","column__acIxp","column__cygCl","column__omoH","column__pj8ZF","column__qdw6F","column__tfxDk","column__uw0Df","columns__aSdWg","columns__duHE","columns__eNc0M","companiesSection","container2","container7","ctaBottom","fig","footer","freeBox___1Moye","freeBox___5Wu5I","freeBox___7A2Kg","freeBox___9RtTl","freeBox___9Sy1F","freeBox__auSh0","freeBox__bjJUn","freeBox__cPQh","freeBox__cgcJa","freeBox__ez8Vz","freeBox__faU5J","freeBox__faVK","freeBox__gLzge","freeBox__h0KEm","freeBox__hprG","freeBox__iz74W","freeBox__kb7ZK","freeBox__klSwe","freeBox__llRuL","freeBox__m2BJr","freeBox__o7Bgg","freeBox__oUlQg","freeBox__qIyRr","freeBox__rRnec","freeBox__s7Og3","freeBox__sKvWi","freeBox__sgP0U","freeBox__t11Tb","freeBox__tdx31","freeBox__trp5T","freeBox__wO2R","freeBox__z4Tx3","freeBox__zIcSk","freeBox__zLB","h1","h2___6L0Ec","h2__l2Lt4","h2__rxVfI","h2__sOjNu","h3__azNKh","h3__gd3Pk","h3__s4Dt0","h3__z53Am","h5__igSa2","h5__v1Brc","h5__vPwle","header","hero","img___0GHux","img___9D5Uy","img__cUt3P","img__df2Kt","img__hX501","img__n429","img__psXho","img__qKimC","img__uIW1","info","row3","section__d7IAh","section__iJ6T6","section__tCz7C","svg__gjGnx","svg__pEtJm","svg__qdi9T","svg__wgOcy","testimonial__csHlu","testimonial__iSvb","testimonial__k7JXj","text___54Of","text__fYmZo","text__h15D9","text__l7Igd","text__maNmH","text__u1E","text__w3EBf","text__wwxqu","PlasmicHomepage__VariantProps","PlasmicHomepage__ArgProps","defaultHomepage__Args","globalVariants","ensureGlobalVariants","screen","useScreenVariantsrjDmXlLiWnTyry","sty","Header","hasVariant","role","loading","girls18285391920JpgE8O7G209USxCex","fullWidth","fullHeight","aspectRatio","undefined","people31046351920JpgG7RneH3MEsqQti","Testimonial","woman32879561920JpgJEAqYrGa2AoOSb","CtaBottom","Footer","PlasmicHomepage__RenderFunc","PlasmicHomepage"],"sourceRoot":""}