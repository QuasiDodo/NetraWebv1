// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: deKwkoK4pA1w3jYaAefVBE
// Component: d8bL9Y2_gRt_he
import * as React from "react"
import * as p from "@plasmicapp/react-web"
import * as ph from "@plasmicapp/host"
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Header from "../../Header" // plasmic-import: IZ7cmxqWjCYvg/component
import Button from "../../Button" // plasmic-import: BzFeYtaDPGuPG/component
import Footer from "../../Footer" // plasmic-import: rUgGjC8cM1U1l/component
import { useScreenVariants as useScreenVariantsrjDmXlLiWnTyry } from "./PlasmicGlobalVariant__Screen" // plasmic-import: rjDmXLLiWNTyry/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as projectcss from "./plasmic_netra.module.css" // plasmic-import: deKwkoK4pA1w3jYaAefVBE/projectcss
import * as sty from "./PlasmicContactUs.module.css" // plasmic-import: d8bL9Y2_gRt_he/css
import LoactionVectorsvgIcon from "./icons/PlasmicIcon__LoactionVectorsvg" // plasmic-import: KShInrsyWaflUh/icon
import PhoneVectorsvgIcon from "./icons/PlasmicIcon__PhoneVectorsvg" // plasmic-import: RxipPuPCnHkGl7/icon
import EmailVectorsvgIcon from "./icons/PlasmicIcon__EmailVectorsvg" // plasmic-import: WQ52TjU0YmHFxm/icon
import globeTrotter18280791920JpgZcQ3Wy7NQo0WyM from "./images/globeTrotter18280791920Jpg.jpeg" // plasmic-import: ZcQ3Wy7nQO0WyM/picture

export const PlasmicContactUs__VariantProps = new Array()

export const PlasmicContactUs__ArgProps = new Array()

export const defaultContactUs__Args = {}

function PlasmicContactUs__RenderFunc(props) {
  const { variants, overrides, forNode } = props
  const args = Object.assign({}, defaultContactUs__Args, props.args)
  const $props = args
  const $ctx = ph.useDataEnv?.() || {}
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsrjDmXlLiWnTyry(),
  })

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"pageBanerSection"}
            data-plasmic-override={overrides.pageBanerSection}
            className={classNames(projectcss.all, sty.pageBanerSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__xrhX7)}>
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__pAzDc
                )}
              >
                {"Contact Us"}
              </h1>
            </div>
          </div>

          <section className={classNames(projectcss.all, sty.section___6W6R)}>
            <div className={classNames(projectcss.all, sty.freeBox__gZkNq)}>
              <div className={classNames(projectcss.all, sty.freeBox__pnBeQ)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___6MjMg)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns__yMr)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__efU1N
                        )}
                      >
                        <p.PlasmicImg
                          data-plasmic-name={"img"}
                          data-plasmic-override={overrides.img}
                          alt={""}
                          className={classNames(sty.img)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={{
                            src: globeTrotter18280791920JpgZcQ3Wy7NQo0WyM,
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined,
                          }}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__vChOh
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qnbNp
                          )}
                        >
                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__e3NX
                            )}
                          >
                            {"Get In touch"}
                          </h1>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wfSz6
                            )}
                          >
                            {
                              "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                            }
                          </div>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"formContainer2"}
                            data-plasmic-override={overrides.formContainer2}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.formContainer2
                            )}
                          >
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.columns__ignK
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.column__cbFsv
                                )}
                              >
                                <input
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.input,
                                    sty.textInput___7XVyn
                                  )}
                                  placeholder={"First name"}
                                  size={1}
                                  type={"text"}
                                  value={""}
                                />
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.column__taKo0
                                )}
                              >
                                <input
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.input,
                                    sty.textInput__mXso2
                                  )}
                                  placeholder={"Last name"}
                                  size={1}
                                  type={"text"}
                                  value={""}
                                />
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.column__l95Du
                                )}
                              >
                                <input
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.input,
                                    sty.textInput__vK18
                                  )}
                                  placeholder={"Email address"}
                                  size={1}
                                  type={"text"}
                                  value={""}
                                />
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.column___1Pjej
                                )}
                              >
                                <input
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.input,
                                    sty.textInput__w3EKp
                                  )}
                                  placeholder={"Phone number"}
                                  size={1}
                                  type={"text"}
                                  value={""}
                                />
                              </div>
                            </p.Stack>

                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.columns__itwLg
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.column__zwIvC
                                )}
                              >
                                <input
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.input,
                                    sty.textInput__uoyZe
                                  )}
                                  placeholder={"Company"}
                                  size={1}
                                  type={"text"}
                                  value={""}
                                />
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.column__dla5K
                                )}
                              >
                                <textarea
                                  data-plasmic-name={"textarea"}
                                  data-plasmic-override={overrides.textarea}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.textarea,
                                    sty.textarea
                                  )}
                                  placeholder={"Message"}
                                  value={""}
                                />

                                <Button
                                  data-plasmic-name={"button"}
                                  data-plasmic-override={overrides.button}
                                  className={classNames(
                                    "__wab_instance",
                                    sty.button
                                  )}
                                  color={"blackCoffee"}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__hJbw1
                                    )}
                                  >
                                    {"Send Message"}
                                  </div>
                                </Button>
                              </div>
                            </p.Stack>
                          </p.Stack>
                        </p.Stack>
                      </div>
                    </p.Stack>
                  </p.Stack>
                ) : null}
              </div>
            </div>
          </section>

          <section className={classNames(projectcss.all, sty.section__oLGs)}>
            <div className={classNames(projectcss.all, sty.freeBox___1Qu8I)}>
              <div className={classNames(projectcss.all, sty.freeBox__njySk)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__qPaLf)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns__fpSsr)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__pnfpx
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vfW6Y
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vcLm0
                            )}
                          >
                            <LoactionVectorsvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__tUAxR
                              )}
                              role={"img"}
                            />
                          </div>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jmMqx
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__wvEZj
                              )}
                            >
                              {"Address"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__aJe3
                              )}
                            >
                              {"121 state lorem state"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__fr8FP
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jktTn
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__inetr
                            )}
                          >
                            <PhoneVectorsvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__a5HrA
                              )}
                              role={"img"}
                            />
                          </div>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yCnr9
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__teki4
                              )}
                            >
                              {"Phone"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ej6ON
                              )}
                            >
                              {"888888885588"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__fmndL
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___1RSjg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lqQUo
                            )}
                          >
                            <EmailVectorsvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lQ5K2
                              )}
                              role={"img"}
                            />
                          </div>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__k59Oo
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__xwKnh
                              )}
                            >
                              {"Email"}
                            </h3>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ghi8Z
                              )}
                            >
                              {"Info@gmail.com"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>
                    </p.Stack>
                  </p.Stack>
                ) : null}
              </div>
            </div>
          </section>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  )
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "pageBanerSection",
    "img",
    "formContainer2",
    "textarea",
    "button",
    "footer",
  ],

  header: ["header"],
  pageBanerSection: ["pageBanerSection"],
  img: ["img"],
  formContainer2: ["formContainer2", "textarea", "button"],
  textarea: ["textarea"],
  button: ["button"],
  footer: ["footer"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicContactUs__ArgProps,
      internalVariantPropNames: PlasmicContactUs__VariantProps,
    })

    return PlasmicContactUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicContactUs"
  } else {
    func.displayName = `PlasmicContactUs.${nodeName}`
  }
  return func
}

export const PlasmicContactUs = Object.assign(
  // Top-level PlasmicContactUs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageBanerSection: makeNodeComponent("pageBanerSection"),
    img: makeNodeComponent("img"),
    formContainer2: makeNodeComponent("formContainer2"),
    textarea: makeNodeComponent("textarea"),
    button: makeNodeComponent("button"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicContactUs
    internalVariantProps: PlasmicContactUs__VariantProps,
    internalArgProps: PlasmicContactUs__ArgProps,
  }
)

export default PlasmicContactUs
/* prettier-ignore-end */
